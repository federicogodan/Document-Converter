.modal-dialog
  .modal-content
    .modal-header
      %button.close.cancel{"aria-hidden" => "true", "data-dismiss" => "modal", type: "button"} Ã—
      %h4.modal-title Convert a document
    .modal-body    
      = form_tag({:controller => 'documents', :action => 'create'}, {:multipart => true}) do
        .field
          .radio
            %label
              %input#radio_file{checked: "checked", name: "document[upload_method]", type: "radio", value: "file"}/
              From a local file
          .radio
            %label
              %input#radio_url{name: "document[upload_method]", type: "radio", value: "URL"}/
              From a remote URL

          .form_file.form-group
            %label.col-sm-1.control-label{for: "document_file"}File
            .col-sm-11
              =file_field(:document, :file)

          .form_url.form-group{hidden: true}
            %label.col-sm-1.control-label{for: "document_url"}URL
            .col-sm-7
              %input#document_url.form-control{name: "document[url]", placeholder: "Document URL", type: "url"}
            %label.col-sm-1.control-label{for: "document_url_ext"}
            .col-sm-3
          %br
          %p.pull-right= 'maximum ' + number_to_human_size(@user.max_document_size)
          %br 
          #formats_panel.panel.panel-default{hidden: true}
            .panel-heading Destination Format
            .panel-body
              #form-to-ext1.form-group.col-sm-6
              #form-to-ext2.form-group.col-sm-6
        .modal-footer
          %a.btn.cancel{"aria-hidden" => "true", "data-dismiss" => "modal"} Close
          =submit_tag "Upload", :class => 'btn btn-primary', :id => 'btn_upload', :disabled => true

:javascript
  $(document).ready(function() {

    function to_radio(ext, checked) {
      html_string = '<div class="radio"><label><input id="document_ext_';
      html_string = html_string + ext;
      html_string = html_string + '" type="radio" value="';
      html_string = html_string + ext;
      html_string = html_string + '" name="document[destination_format]"';
      if (checked) {
        html_string = html_string + ' checked="checked"></input>';
      }
      else {
        html_string = html_string + '></input>';
      }
      html_string = html_string + ext;
      html_string = html_string + '</label></div>';
      return html_string;
  }

    $("#radio_file").click(function(){
      $(".form_file").fadeIn();
      $(".form_url").hide();
      $('#btn_upload').prop('disabled', true);
      if ($("#document_file").val().length > 0) {
        $('#formats_panel').fadeIn();
      }
      else {
       $('#formats_panel').fadeOut();
      };
    });

    $("#radio_url").click(function(){
      $(".form_file").hide();
      $(".form_url").fadeIn();
      $('#btn_upload').prop('disabled', true);
      if ($("#document_url").val().length > 0) {
        $('#formats_panel').fadeIn();
      }
      else {
       $('#formats_panel').fadeOut();
      };
    });

    $('#document_file').change(function() {
         formats_file();
      });
    
       function formats_file() {
        dot = $("#document_file").val().lastIndexOf(".");
        ext = $("#document_file").val().substring(dot+1);
        $('#form-to-ext1').empty();
        $('#form-to-ext2').empty();
        $('#btn_upload').prop('disabled', true);
        $.get('/documents/get_formats', 
          { extension: ext },
          function(data) {
            parent1 = $('#form-to-ext1');
            parent2 = $('#form-to-ext2');
            checked = true;
            i = 1;
            data.forEach(function(entry) {
                if (i%2) {
                  parent = parent1;
                } else {
                  parent = parent2;
                }
                parent.append(to_radio(entry, checked));
                checked = false;
                i++;
                $('#btn_upload').prop('disabled', false);
            });
          });
          $('#formats_panel').fadeIn();
         };
      
      $('#document_url').change(function() {
        formats_url();
      });
    
      function formats_url() {
        dot = $("#document_url").val().lastIndexOf(".");
        ext = $("#document_url").val().substring(dot+1);
        
        $('#form-to-ext1').empty();
        $('#form-to-ext2').empty();
        $('#btn_upload').prop('disabled', true);

        $.get('/documents/get_formats', 
          { extension: ext },
          function(data) {
            parent1 = $('#form-to-ext1');
            parent2 = $('#form-to-ext2');
            parent1.empty();
            parent2.empty();
            checked = true;
            i = 1;
            data.forEach(function(entry) {
                if (i%2) {
                  parent = parent1;
                } else {
                  parent = parent2;
                }
                parent.append(to_radio(entry, checked));
                checked = false;
                i++;
                $('#btn_upload').prop('disabled', false);
            });
          });
          $('#formats_panel').fadeIn();  
      };
  });

